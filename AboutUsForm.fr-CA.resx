<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="aboutUs_ExitButton.Location" type="System.Drawing.Point, System.Drawing">
    <value>2136, 24</value>
  </data>
  <data name="aboutUs_ExitButton.Size" type="System.Drawing.Size, System.Drawing">
    <value>136, 64</value>
  </data>
  <data name="aboutUs_ExitButton.Text" xml:space="preserve">
    <value>Sortie</value>
  </data>
  <data name="aboutUsTextBox.Text" xml:space="preserve">
    <value>	MontreWild est une application éducative dédiée à aborder les problèmes urgents de sensibilisation à l'environnement et de conservation de la faune à Montréal. Dans un monde où la pollution et le réchauffement climatique menacent les écosystèmes partout, MontreWild offre une solution. Notre application offre aux utilisateurs des expériences immersives qui explorent la riche biodiversité de Montréal tout en mettant en lumière les effets néfastes de la dégradation de l'environnement. Grâce à des fonctionnalités interactives telles que des puzzles, des jeux de quiz et des défis de trivia, ainsi que des vidéos éducatives captivantes, des images et une encyclopédie animale complète, les utilisateurs de tous âges peuvent approfondir leur compréhension de la faune de Montréal de manière divertissante et agréable.

	Ces dernières années, il y a eu une augmentation significative de la sensibilisation aux impacts du réchauffement climatique et de la pollution sur les écosystèmes et la faune. Malgré ces efforts, Montréal continue de faire face à des défis, comme en témoignent les grandes quantités de déchets qui recouvrent ses rues chaque printemps. Ces déchets, mettant des siècles à se décomposer, génèrent des microplastiques que les animaux ingèrent par erreur. De plus, lorsque les déchets se décomposent, ils libèrent des produits chimiques et des toxines dans le sol, contaminant ainsi la terre où poussent arbres, fleurs, buissons et herbes. Les insectes et les animaux dépendent ensuite de cette flore et de cette terre pour se nourrir.

	Notre objectif est d'informer et d'inspirer davantage les citoyens de Montréal, ainsi que les individus du monde entier, à continuer de protéger l'environnement et la faune sur l'île de Montréal. Bien que Montréal soit reconnue pour sa conscience environnementale, il y a toujours place à l'amélioration pour créer une ville plus verte et plus saine. MontreWild vise à être un catalyseur pour des actions significatives et à contribuer aux efforts continus en matière de conservation de l'environnement.</value>
  </data>
  <data name="creatorsLabel.Text" xml:space="preserve">
    <value>Créateurs:</value>
  </data>
  <data name="aboutUsTitleLabel.Location" type="System.Drawing.Point, System.Drawing">
    <value>896, 104</value>
  </data>
  <data name="aboutUsTitleLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>968, 176</value>
  </data>
  <data name="aboutUsTitleLabel.Text" xml:space="preserve">
    <value>À Propos De Nous</value>
  </data>
  <data name="aboutUsMainPanel.Size" type="System.Drawing.Size, System.Drawing">
    <value>2376, 1256</value>
  </data>
</root>